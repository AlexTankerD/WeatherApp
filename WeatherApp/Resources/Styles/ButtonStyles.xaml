<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <Style x:Key="ButtonEllipseStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btn" CornerRadius="40" Background="White" >
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn"  Property="Background" Value="{StaticResource BlueColor}"/>
                            <Setter TargetName="content" Property="Button.Foreground" Value="White"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Background" Value="{StaticResource BlueAccentuated}"/>
                            <Setter TargetName="content" Property="Button.Foreground" Value="White"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ButtonEllipseBlackStyle" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border x:Name="btn" CornerRadius="40" Background="Black" >
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center"
                                          VerticalAlignment="Center"
                                          TextElement.FontWeight="Bold">
                        </ContentPresenter>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="btn"  Property="Background" Value="{StaticResource BlueColor}"/>
                            <Setter TargetName="content" Property="Button.Foreground" Value="Black"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="btn" Property="Background" Value="{StaticResource BlueAccentuated}"/>
                            <Setter TargetName="content" Property="Button.Foreground" Value="Black"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="test" TargetType="Button">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Name="ButtonBorder" CornerRadius="10" BorderThickness="1" BorderBrush="Gray" Background="LightGray">
                        <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="DockBtnStyle"
           TargetType="Button">

        <Setter Property="Height"
                Value="50" />

        <Setter Property="Width"
                Value="50" />

        <Setter Property="Template">

            <Setter.Value>

                <ControlTemplate TargetType="{x:Type Button}">

                    <Border x:Name="border"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}" />

                </ControlTemplate>

            </Setter.Value>

        </Setter>

        <!--// Button Animation //-->

        <Style.Triggers>
            <EventTrigger RoutedEvent="MouseEnter">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)"
                                         To="65"
                                         Duration="0:0:0.3" />

                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)"
                                         To="65"
                                         Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>

            <EventTrigger RoutedEvent="MouseLeave">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimation Storyboard.TargetProperty="(Button.Width)"
                                         To="50"
                                         Duration="0:0:0.3" />

                        <DoubleAnimation Storyboard.TargetProperty="(Button.Height)"
                                         To="50"
                                         Duration="0:0:0.3" />
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>
    <Style x:Key="PopupStyle"
           TargetType="Popup">

        <Setter Property="AllowsTransparency"
                Value="True" />

        <Setter Property="VerticalOffset"
                Value="-30" />

        <Setter Property="HorizontalAlignment"
                Value="Center" />

        <Setter Property="Height"
                Value="35" />

        <Setter Property="Placement"
                Value="Top" />

    </Style>

    <!--// Popup Border //-->

    <Style x:Key="border"
           TargetType="Border">

        <Setter Property="Height"
                Value="27" />

        <Setter Property="Background"
                Value="#FFFFFF" />

        <Setter Property="CornerRadius"
                Value="4" />

        <Setter Property="VerticalAlignment"
                Value="Top" />

    </Style>

    <!--// Popup Text //-->

    <Style x:Key="PopupText"
           TargetType="TextBlock">

        <Setter Property="Foreground"
                Value="#000000" />

        <Setter Property="FontFamily"
                Value="Roboto" />

        <Setter Property="FontSize"
                Value="16" />

        <Setter Property="VerticalAlignment"
                Value="Center" />

        <Setter Property="HorizontalAlignment"
                Value="Center" />

    </Style>

    <!--// Dock Bar Popup Arrow Path //-->

    <Style x:Key="ArrowPath"
           TargetType="Path">

        <Setter Property="HorizontalAlignment"
                Value="Center" />

        <Setter Property="VerticalAlignment"
                Value="Bottom" />

        <Setter Property="Data"
                Value="M0,0 L8,8 16,0 L0,0" />

        <Setter Property="Fill"
                Value="#FFFFFF" />

        <Setter Property="Height"
                Value="8" />

        <Setter Property="Width"
                Value="16" />

        <Setter Property="Stroke"
                Value="#FFFFFF" />

        <Setter Property="Stretch"
                Value="None" />

    </Style>
</ResourceDictionary>